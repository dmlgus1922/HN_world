{"version":3,"sources":["Audio.jsx","index.tsx"],"names":["withStreamlitConnection","useState","recordState","setRecordState","setAudioDataURL","reset","setReset","state","onStop","data","url","type","backgroundColor","foregroundColor","canvasWidth","canvasHeight","onClick","e","target","innerText","RecordState","START","console","log","id","STOP","Streamlit","setComponentReady","setFrameHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA0EeA,eAlED,WACZ,MAAkCC,oBAAS,GAA3C,mBACA,GADA,UACsCA,mBAAS,OAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAAS,IAAjD,mBAAqBG,GAArB,WACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAA0BL,oBAAS,GAAnC,6BAwCA,OACE,yCAEE,sBAAC,IAAD,CACEM,MAAOL,EACPM,OA1Ce,SAACC,GAElBL,GADY,IAAVC,EACc,GAEAI,EAAKC,MAuCnBC,KAAK,YACLC,gBAAgB,qBAChBC,gBAAgB,iBAChBC,YAAa,GACbC,aAAc,KAEhB,gCAAQC,QApCQ,SAACC,GAMQ,iBAAvBA,EAAEC,OAAOC,WACXb,GAAS,GACTF,EAAgB,IAChBD,EAAeiB,IAAYC,OAC3BC,QAAQC,IAAIH,IAAYC,OAExBJ,EAAEC,OAAOC,UAAY,eACrBF,EAAEC,OAAOM,GAAK,SAGdlB,GAAS,GACTF,EAAgB,IAChBD,EAAeiB,IAAYK,MAE3BR,EAAEC,OAAOC,UAAY,eACrBF,EAAEC,OAAOM,GAAK,YAed,oBAcNE,IAAUC,oBAIVD,IAAUE,iBC9EVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAGE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ba432307.chunk.js","sourcesContent":["import { React, useState } from 'react'\r\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder'\r\nimport {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\n\r\nconst Audio = () => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [recordState, setRecordState] = useState(null);\r\n  const [audioDataURL, setAudioDataURL] = useState('');\r\n  const [reset, setReset] = useState(false);\r\n  const [regis, setRegis] = useState(false);\r\n\r\n\r\n  const onStop_audio = (data) => {\r\n    if (reset === true) {\r\n      setAudioDataURL('')\r\n    } else {\r\n      setAudioDataURL(data.url)\r\n    }\r\n\r\n    // fetch(data.url).then((ctx) => {\r\n    //   return ctx.blob()\r\n    // })\r\n\r\n  }\r\n\r\n  const startRecord = (e) => {\r\n    // 버튼을 클릭했을 때 mqtt 연동 가능토록 해야 함\r\n    // 이는 python에서 처리. 버튼 클릭이 trigger가 되고 파이썬 코드가 실행되도록\r\n    // 이 코드에서 document.querySelector를 사용해서 streamlit으로 만든 위젯에 접근 가능한지 확인 필요\r\n    // 가능하다면 hidden으로 만든 버튼을 클릭하게 동작\r\n    // 해당 버튼 클릭 시 mqtt, wss 전송 등 가능토록 코드를 작성\r\n    if (e.target.innerText === '녹음') {\r\n      setReset(false)\r\n      setAudioDataURL('');\r\n      setRecordState(RecordState.START)\r\n      console.log(RecordState.START)\r\n      // Streamlit.setComponentValue('')\r\n      e.target.innerText = '중지'\r\n      e.target.id = 'stop'\r\n      \r\n    } else {\r\n      setReset(false)\r\n      setAudioDataURL('');\r\n      setRecordState(RecordState.STOP)\r\n    \r\n      e.target.innerText = '녹음'\r\n      e.target.id = 'record'\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      Audio\r\n      <AudioReactRecorder\r\n        state={recordState}\r\n        onStop={onStop_audio}\r\n        type='audio/wav'\r\n        backgroundColor='rgb(255, 255, 255)'\r\n        foregroundColor='rgb(255,76,75)'\r\n        canvasWidth={''}\r\n        canvasHeight={39}\r\n      ></AudioReactRecorder>\r\n      <button onClick={startRecord}>녹음</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\r\n// connection between your component and the Streamlit app, and handles\r\n// passing arguments from Python -> Component.\r\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\r\nexport default withStreamlitConnection(Audio)\r\n// export default StAudioRec\r\n\r\n// Tell Streamlit we're ready to start receiving data. We won't get our\r\n// first RENDER_EVENT until we call this function.\r\nStreamlit.setComponentReady()\r\n\r\n// Finally, tell Streamlit to update our initial height. We omit the\r\n// `height` parameter here to have it default to our scrollHeight.\r\nStreamlit.setFrameHeight()\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StAudioRec from \"./StreamlitAudioRecorder_copy\"\nimport Audio from \"./Audio\"\n// import Test from \"./Test\"\nReactDOM.render(\n  <React.StrictMode>\n    {/* <StAudioRec /> */}\n    {/* <Test /> */}\n    <Audio/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}